package main

import (
	"fmt"
)

func main() {
	fmt.Println(splitPainting([][]int{{1, 4, 5}, {4, 7, 7}, {1, 7, 9}}))
	fmt.Println(splitPainting([][]int{{1, 7, 9}, {6, 8, 15}, {8, 10, 7}}))
	fmt.Println(splitPainting([][]int{{1, 4, 5}, {1, 4, 7}, {4, 7, 1}, {4, 7, 11}}))

	fmt.Println(splitPainting([][]int{{4, 5, 9}, {8, 12, 5}, {4, 7, 19}, {14, 15, 1}, {3, 10, 8}, {17, 20, 18}, {7, 19, 14}, {8, 16, 6}, {14, 17, 7}, {11, 13, 3}}))
	fmt.Println(splitPainting([][]int{{4, 16, 12}, {9, 10, 15}, {18, 19, 13}, {3, 13, 20}, {12, 16, 3}, {2, 10, 10}, {3, 11, 4}, {13, 16, 6}}))

}

func splitPainting(segments [][]int) [][]int64 {
	var ans [][]int64 = make([][]int64, 0)
	var mix [100002]int64
	var points [100002]bool
	for _, vl := range segments {
		st, end, color := vl[0], vl[1], vl[2]
		mix[st] += int64(color)
		mix[end] -= int64(color)
		points[st] = true
		points[end] = true
	}

	st, sum := 0, int64(0)
	for i := 1; i <= 100000; i++ {
		if !points[i] {
			continue
		}
		if sum > 0 {
			ans = append(ans, []int64{int64(st), int64(i), sum})
		}
		st = i
		sum += mix[i]
	}
	return ans
}

/*

[[4,5,9],[8,12,5],[4,7,19],[14,15,1],[3,10,8],[17,20,18],[7,19,14],[8,16,6],[14,17,7],[11,13,3]]
[[3,4,8],[4,7,36],[7,8,50],[8,10,61],[10,5,53],[5,7,44],[7,11,25],[11,14,28],[14,17,36],[17,19,54],[19,12,40],[12,16,35],[16,13,29],[13,15,26],[15,17,25],[17,20,18]]
[[3,4,8],[4,5,36],[5,7,27],[7,8,22],[8,10,33],[10,11,25],[11,12,28],[12,13,23],[13,14,20],[14,15,28],[15,16,27],[16,17,21],[17,19,32],[19,20,18]]

[[4,16,12],[9,10,15],[18,19,13],[3,13,20],[12,16,3],[2,10,10],[3,11,4],[13,16,6]]
[[2,3,10],[3,4,34],[4,9,46],[9,10,61],[10,11,36],[11,12,32],[12,13,35],[13,16,21],[16,19,13]]
[[2,3,10],[3,4,34],[4,9,46],[9,10,61],[10,11,36],[11,12,32],[12,13,35],[13,16,21],[18,19,13]]
*/
