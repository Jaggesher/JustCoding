package main

import (
	"fmt"
)

func main() {
	fmt.Println("Case 1:", isValidSudoku([][]byte{{'5', '3', '.', '.', '7', '.', '.', '.', '.'}, {'6', '.', '.', '1', '9', '5', '.', '.', '.'}, {'.', '9', '8', '.', '.', '.', '.', '6', '.'}, {'8', '.', '.', '.', '6', '.', '.', '.', '3'}, {'4', '.', '.', '8', '.', '3', '.', '.', '1'}, {'7', '.', '.', '.', '2', '.', '.', '.', '6'}, {'.', '6', '.', '.', '.', '.', '2', '8', '.'}, {'.', '.', '.', '4', '1', '9', '.', '.', '5'}, {'.', '.', '.', '.', '8', '.', '.', '7', '9'}}))
	fmt.Println("Case 2:", isValidSudoku([][]byte{{'8', '3', '.', '.', '7', '.', '.', '.', '.'}, {'6', '.', '.', '1', '9', '5', '.', '.', '.'}, {'.', '9', '8', '.', '.', '.', '.', '6', '.'}, {'8', '.', '.', '.', '6', '.', '.', '.', '3'}, {'4', '.', '.', '8', '.', '3', '.', '.', '1'}, {'7', '.', '.', '.', '2', '.', '.', '.', '6'}, {'.', '6', '.', '.', '.', '.', '2', '8', '.'}, {'.', '.', '.', '4', '1', '9', '.', '.', '5'}, {'.', '.', '.', '.', '8', '.', '.', '7', '9'}}))

}

func isValidSudoku(board [][]byte) bool {
	const N = 9
	var row, col, boxes [N]int

	//check Vertical, Horizontal & Box
	for r := 0; r < 9; r++ {
		for c := 0; c < 9; c++ {
			if board[r][c] == '.' {
				continue
			}

			ch := 1 << (board[r][c] - '0')
			if (row[r] & ch) > 0 {
				return false
			}
			row[r] |= ch

			if (col[c] & ch) > 0 {
				return false
			}
			col[c] |= ch

			box := (int(c/3) * 3) + int(r/3)
			if (boxes[box] & ch) > 0 {
				return false
			}
			boxes[box] |= ch
		}
	}
	return true
}
